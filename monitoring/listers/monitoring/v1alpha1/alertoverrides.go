// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/api/monitoring/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AlertOverridesLister helps list AlertOverrides.
// All objects returned here must be treated as read-only.
type AlertOverridesLister interface {
	// List lists all AlertOverrides in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlertOverrides, err error)
	// AlertOverrides returns an object that can list and get AlertOverrides.
	AlertOverrides(namespace string) AlertOverridesNamespaceLister
	AlertOverridesListerExpansion
}

// alertOverridesLister implements the AlertOverridesLister interface.
type alertOverridesLister struct {
	indexer cache.Indexer
}

// NewAlertOverridesLister returns a new AlertOverridesLister.
func NewAlertOverridesLister(indexer cache.Indexer) AlertOverridesLister {
	return &alertOverridesLister{indexer: indexer}
}

// List lists all AlertOverrides in the indexer.
func (s *alertOverridesLister) List(selector labels.Selector) (ret []*v1alpha1.AlertOverrides, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlertOverrides))
	})
	return ret, err
}

// AlertOverrides returns an object that can list and get AlertOverrides.
func (s *alertOverridesLister) AlertOverrides(namespace string) AlertOverridesNamespaceLister {
	return alertOverridesNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AlertOverridesNamespaceLister helps list and get AlertOverrides.
// All objects returned here must be treated as read-only.
type AlertOverridesNamespaceLister interface {
	// List lists all AlertOverrides in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AlertOverrides, err error)
	// Get retrieves the AlertOverrides from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AlertOverrides, error)
	AlertOverridesNamespaceListerExpansion
}

// alertOverridesNamespaceLister implements the AlertOverridesNamespaceLister
// interface.
type alertOverridesNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AlertOverrides in the indexer for a given namespace.
func (s alertOverridesNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AlertOverrides, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AlertOverrides))
	})
	return ret, err
}

// Get retrieves the AlertOverrides from the indexer for a given namespace and name.
func (s alertOverridesNamespaceLister) Get(name string) (*v1alpha1.AlertOverrides, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("alertoverrides"), name)
	}
	return obj.(*v1alpha1.AlertOverrides), nil
}
