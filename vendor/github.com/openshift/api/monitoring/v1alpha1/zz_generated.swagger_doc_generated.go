package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_AlertRelabelConfig = map[string]string{
	"":       "AlertRelabelConfig defines a set of relabel configs for alerts.\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
	"spec":   "spec describes the desired state of this AlertRelabelConfig object.",
	"status": "status describes the current state of this AlertRelabelConfig object.",
}

func (AlertRelabelConfig) SwaggerDoc() map[string]string {
	return map_AlertRelabelConfig
}

var map_AlertRelabelConfigCondition = map[string]string{
	"":                   "AlertRelabelConfigCondition details a status condition of an AlertRelabelConfig.",
	"type":               "type is the type of the condition.",
	"status":             "status is the status of the condition. May be True, False, or Unknown.",
	"reason":             "reason for the condition's last transition. Usually a machine and human readable constant.",
	"message":            "message is a human readable message indicating details about the last transition.",
	"lastTransitionTime": "RFC 3339 date and time when this condition last transitioned.",
}

func (AlertRelabelConfigCondition) SwaggerDoc() map[string]string {
	return map_AlertRelabelConfigCondition
}

var map_AlertRelabelConfigList = map[string]string{
	"":      "AlertRelabelConfigList is a list of AlertRelabelConfigs.\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
	"items": "items is a list of AlertRelabelConfigs.",
}

func (AlertRelabelConfigList) SwaggerDoc() map[string]string {
	return map_AlertRelabelConfigList
}

var map_AlertRelabelConfigSpec = map[string]string{
	"":        "AlertRelabelConfigsSpec is the desired state of an AlertRelabelConfig resource.",
	"configs": "configs is a list of sequentially evaluated alert relabel configs.",
}

func (AlertRelabelConfigSpec) SwaggerDoc() map[string]string {
	return map_AlertRelabelConfigSpec
}

var map_AlertRelabelConfigStatus = map[string]string{
	"":           "AlertRelabelConfigStatus is the status of an AlertRelabelConfig resource.",
	"conditions": "conditions contains details on the state of the AlertRelabelConfig, may be empty.",
}

func (AlertRelabelConfigStatus) SwaggerDoc() map[string]string {
	return map_AlertRelabelConfigStatus
}

var map_AlertingRule = map[string]string{
	"":       "AlertingRule represents a set of user-defined Prometheus rule groups containing alerting rules -- recording rules are not allowed.\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
	"spec":   "spec describes the desired state of this AlertingRule object.",
	"status": "status describes the current state of this AlertOverrides object.",
}

func (AlertingRule) SwaggerDoc() map[string]string {
	return map_AlertingRule
}

var map_AlertingRuleList = map[string]string{
	"":      "AlertingRuleList is a list of AlertingRule objects.\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
	"items": "items is a list of AlertingRule objects.",
}

func (AlertingRuleList) SwaggerDoc() map[string]string {
	return map_AlertingRuleList
}

var map_AlertingRuleSpec = map[string]string{
	"":       "AlertingRuleSpec is the desired state of an AlertingRule resource.",
	"groups": "groups is a list of grouped alerting rules.",
}

func (AlertingRuleSpec) SwaggerDoc() map[string]string {
	return map_AlertingRuleSpec
}

var map_AlertingRuleStatus = map[string]string{
	"":                   "AlertingRuleStatus is the status of an AlertingRule resource.",
	"observedGeneration": "observedGeneration is the last generation change you've dealt with.",
	"prometheusRule":     "prometheusRule is the generated PrometheusRule for this AlertingRule.",
}

func (AlertingRuleStatus) SwaggerDoc() map[string]string {
	return map_AlertingRuleStatus
}

var map_RelabelConfig = map[string]string{
	"":             "RelabelConfig allows dynamic rewriting of label sets for alerts. See Prometheus documentation: - https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs - https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
	"sourceLabels": "sourceLabels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
	"separator":    "separator placed between concatenated source label values. When omitted, Prometheus will use its default value of ';'.",
	"targetLabel":  "targetLabel to which the resulting value is written in a replace action. It is mandatory for 'replace' and 'hashmod' actions. Regex capture groups are available.",
	"regex":        "regex against which the extracted value is matched. Default is: '(.*)'",
	"modulus":      "modulus to take of the hash of the source label values.  This can be combined with the 'hashmod' action to set 'target_label' to the 'modulus' of a hash of the concatenated 'source_labels'.",
	"replacement":  "replacement value against which a regex replace is performed if the regular expression matches. This is required if the action is 'replace' or 'labelmap'. Regex capture groups are available. Default is: '$1'",
	"action":       "action to perform based on regex matching. Must be one of: replace, keep, drop, hashmod, labelmap, labeldrop, or labelkeep.  Default is: 'replace'",
}

func (RelabelConfig) SwaggerDoc() map[string]string {
	return map_RelabelConfig
}

var map_Rule = map[string]string{
	"":            "Rule describes an alerting rule. See Prometheus documentation: - https://www.prometheus.io/docs/prometheus/latest/configuration/alerting_rules",
	"alert":       "alert is the name of the alert. Must be a valid label value, i.e. only contain ASCII letters, numbers, and underscores.",
	"expr":        "expr is the PromQL expression to evaluate. Every evaluation cycle this is evaluated at the current time, and all resultant time series become pending/firing alerts.",
	"for":         "for is the time period after which alerts are considered firing after first returning results.  Alerts which have not yet fired for long enough are considered pending. This is represented as a Prometheus duration, for details on the format see: - https://prometheus.io/docs/prometheus/latest/configuration/configuration/#duration",
	"labels":      "labels to add or overwrite for each alert.",
	"annotations": "annotations to add to each alert.",
}

func (Rule) SwaggerDoc() map[string]string {
	return map_Rule
}

var map_RuleGroup = map[string]string{
	"":         "RuleGroup is a list of sequentially evaluated alerting rules.",
	"name":     "name is the name of the group.",
	"interval": "interval is how often rules in the group are evaluated.  If not specified, it defaults to the global.evaluation_interval configured in Prometheus, which itself defaults to 1 minute.  This is represented as a Prometheus duration, for details on the format see: - https://prometheus.io/docs/prometheus/latest/configuration/configuration/#duration",
	"rules":    "rules is a list of sequentially evaluated alerting rules.",
}

func (RuleGroup) SwaggerDoc() map[string]string {
	return map_RuleGroup
}

// AUTO-GENERATED FUNCTIONS END HERE
